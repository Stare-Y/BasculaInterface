// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(WeightDBContext))]
    [Migration("20250921213803_BaseEntityLogicDeletion")]
    partial class BaseEntityLogicDeletion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.Entities.Turns.Turn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<int?>("WeightEntryId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Turns");
                });

            modelBuilder.Entity("Core.Domain.Entities.Weight.WeightDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FK_WeightEntryId")
                        .HasColumnType("integer");

                    b.Property<int?>("FK_WeightedProductId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double?>("RequiredAmount")
                        .HasColumnType("double precision");

                    b.Property<double?>("SecondaryTare")
                        .HasColumnType("double precision");

                    b.Property<double>("Tare")
                        .HasColumnType("double precision");

                    b.Property<double>("Weight")
                        .HasColumnType("double precision");

                    b.Property<string>("WeightedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FK_WeightEntryId");

                    b.ToTable("WeightDetails");
                });

            modelBuilder.Entity("Core.Domain.Entities.Weight.WeightEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("BruteWeight")
                        .HasColumnType("double precision");

                    b.Property<DateTime?>("ConcludeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("integer");

                    b.Property<string>("RegisteredBy")
                        .HasColumnType("text");

                    b.Property<double>("TareWeight")
                        .HasColumnType("double precision");

                    b.Property<string>("VehiclePlate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WeightEntries");
                });

            modelBuilder.Entity("Core.Domain.Entities.Weight.WeightDetail", b =>
                {
                    b.HasOne("Core.Domain.Entities.Weight.WeightEntry", "WeightEntry")
                        .WithMany("WeightDetails")
                        .HasForeignKey("FK_WeightEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeightEntry");
                });

            modelBuilder.Entity("Core.Domain.Entities.Weight.WeightEntry", b =>
                {
                    b.Navigation("WeightDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
